version: "3.7"

# exposed ports
# 8000 - web services
# 8080/8443 - trader-ui app via reverse nginx proxy
# 8444 - trader-ui websocket app via reverse nginx proxy
# 8081 - mongo express Web UI
# 8082 - RabbitMQ web UI
# 8083 - temporarily testing Vert.x

services:
  message-bus:
    image: rabbitmq:3.7.8-management
    hostname: message-bus
    container_name: message-bus
    ports:
      - 8082:15672
    volumes:
      - ./rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins

  event-sourcing-db:
    image: mongo:latest
    hostname: event-sourcing-db
    container_name: event-sourcing-db

  mongo-express:
    image: mongo-express:latest
    hostname: mongo-express
    container_name: mongo-express
    links:
      - event-sourcing-db:mongo
    ports:
      - 8081:8081

  web:
    image: nginx
    container_name: web
    volumes:
      - ./web/config.nginx:/etc/nginx/nginx.conf
      - ./config/insecure.pem:/etc/ssl/insecure.pem
      - ./config/insecure.key:/etc/ssl/insecure.key
      - ./config/dhparam-insecure.pem:/etc/ssl/dhparam-insecure.pem
    ports:
      - 8080:8080
      - 8443:8443
      - 8444:8444

  rest-service:
    image: node:latest
    hostname: rest-service
    container_name: rest-service
    working_dir: /home/node/app
    volumes:
      - ./rest-service/:/home/node/app
    ports:
      - 8000:3000
    environment:
      - APP_OKTA_CLIENT_ID
      - APP_OKTA_ORG_URL
    command: bash -c "npm install && node index.js"
    restart: on-failure

  push-service:
    image: maven
    working_dir: /home/app
    volumes:
      - ./push-service/:/home/app
      - ./push-service/.m2/:/root/.m2
    ports:
      - 8083:8080
    command: mvn clean install vertx:run
    restart: on-failure


  trader-ui:
    image: node:latest
    hostname: trader-ui
    container_name: trader-ui
    working_dir: /home/node/app
    volumes:
      - ./trader-ui/:/home/node/app
    environment:
      - REACT_APP_OKTA_CLIENT_ID=${APP_OKTA_CLIENT_ID}
      - REACT_APP_OKTA_ORG_URL=${APP_OKTA_ORG_URL}
    command: bash -c "npm install && npm start"
    restart: on-failure

  event-sourcing:
    image: node:latest
    hostname: event-sourcing
    container_name: event-sourcing
    working_dir: /home/node/app
    volumes:
      - ./event-sourcing/:/home/node/app
    command: bash -c "npm install && node index.js"
    depends_on:
      - event-sourcing-db
      - message-bus
    restart: on-failure

  auction-runner:
    image: node:latest
    working_dir: /home/node/app
    volumes:
      - ./auction-runner/:/home/node/app
    command: bash -c "npm install && node index.js"
    depends_on:
      - event-sourcing-db
      - message-bus
    restart: on-failure
